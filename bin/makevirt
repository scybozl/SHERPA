#!/bin/bash -e

# ####################################################################
# To successfully employ this script, make sure that your bash is in #
# the bin - directory or adjust accordingly.                         #
######################################################################
# functions
printtime () {
printf "%02d:%02d:%02d:%02d sec\n" "$(($1/86400))" "$(($1/3600%24))" "$(($1/60%60))" "$(($1%60))"""    
}

generate () {
make -s $*
if [ $? -ne 0 ]; then
	for (( i=0; i<19; i++ ))
	do
		make compile $*
		if [ $? -eq 0 ]; then
			break
		fi
	done
fi
}

# paths:
TIMINGS=Log/timings.log
RUNDIR=${PWD}
VIRDIR=${PWD}/Virtual/
GENDIR=${PWD}

if [ ! -d Log ]
then 
    mkdir Log
fi

#- time ---------------------------------------
echo '===============================' >$TIMINGS
echo 'Generation and compilation time'>>$TIMINGS
echo '==============================='>>$TIMINGS
echo '--> Start generation:'          >>$TIMINGS
echo "$(date -u)"                     >>$TIMINGS
TIME1="$(date +%s)"
#- time ---------------------------------------


echo '---> Creating code for virtual part...'
gosam.py --olp --mc=sherpa --config=$GENDIR/gosam.rc --ignore-unknown --destination=$VIRDIR OLE_order.lh

# check for error in code generation
if [ -f gosam.crashed ]
then
	echo '---> Error: gosam.crashed file exists! <---'
	exit
fi

#- time ---------------------------------------
TIME2="$(date +%s)"
GENTIME="$((TIME2-TIME1))"
echo '* generation time:'             >>$TIMINGS
echo $(printtime $GENTIME)            >>$TIMINGS
echo '--> Start compilation:'         >>$TIMINGS
#- time ---------------------------------------

cp $GENDIR/gosam.rc $VIRDIR

if [ -f $GENDIR/filter.py ]
then
    cp $GENDIR/filter.py $VIRDIR
fi

if [ "$1" = "stop" ]
then
    exit
fi

cd $VIRDIR
echo '---> Generating makefiles with autotools...'
bash autogen.sh --prefix=$VIRDIR --libdir=$VIRDIR/lib

if [ "$1" = "configstop" ]
then
    exit
fi

echo '---> Generating code for amplitudes...'
for i in p*_*; do 
cd $i
echo 'make in' $i
generate &
cd $VIRDIR
done

wait

echo '---> Installing code for amplitudes...'

make install -s

cd $RUNDIR

#- time ---------------------------------------
TIME3="$(date +%s)"
COMPTIME="$((TIME3-TIME2))"
TOTATIME="$((TIME3-TIME1))"
echo '* compilation time:'            >>$TIMINGS
echo $(printtime $COMPTIME)           >>$TIMINGS
echo '--> Finishing:'                 >>$TIMINGS
echo "$(date -u)"                     >>$TIMINGS
echo '* total time:'                  >>$TIMINGS
echo $(printtime $TOTATIME)           >>$TIMINGS
#- time ---------------------------------------

ln -s $VIRDIR/lib/libgolem_olp.so
